#!/usr/bin/env python3

import os
import sys
import pathlib
import requests
from textwrap import wrap

vector_url = "https://raw.githubusercontent.com/trezor/python-mnemonic/master/vectors.json"
script_dir = pathlib.Path(__file__).parent.absolute()
destination_file = os.path.join(script_dir, "..", "bip39_test_vectors.h")


def main():
    response = requests.get(vector_url)
    if response.status_code != 200:
        print("Failed to download vectors.json")
        sys.exit(1)

    vectors = response.json()
    if "english" not in vectors:
        print("Invalid vector list. Has no english vectors")
        sys.exit(1)

    with open(destination_file, "w") as f:
        f.write("/*  This file was generated by helpers/%s\n" %
                os.path.basename(__file__))
        f.write("    Downloaded from %s\n" % vector_url)
        f.write("    DO NOT EDIT MANUALLY */\n")
        f.write("// clang-format off\n\n")


        f.write("#define BIP39_VECTOR_COUNT %d\n\n" % len(vectors["english"]))

        # Entropy
        f.write("const int   vectorEntropyBytesLength[BIP39_VECTOR_COUNT] = {")
        for vector in vectors["english"]:
            f.write("%d, " % (len(vector[0])*4/8))
        f.write("};\n")

        f.write("const int   vectorEntropyBits[BIP39_VECTOR_COUNT] = {")
        for vector in vectors["english"]:
            f.write("%d, " % (len(vector[0])*4))
        f.write("};\n")

        f.write("const char* vectorEntropyStr[BIP39_VECTOR_COUNT] = {\n")
        for vector in vectors["english"]:
            f.write('    "%s",\n' % vector[0])
        f.write("};\n")

        f.write("const char  vectorEntropy[BIP39_VECTOR_COUNT][32] = {\n")
        for vector in vectors["english"]:
            f.write("    {0x%s},\n" % ", 0x".join(
                c for c in wrap(vector[0], 2)))
        f.write("};\n\n")

        # Mnemonic
        f.write("const int   vectorWordsCount[BIP39_VECTOR_COUNT] = {")
        for vector in vectors["english"]:
            f.write("%d, " % (len(vector[1].split())))
        f.write("};\n")

        f.write("const char* vectorWords[BIP39_VECTOR_COUNT][24] = {\n")
        for vector in vectors["english"]:
            f.write('    {"%s"},\n' % '", "'.join(vector[1].split()))
        f.write("};\n\n")

        # Seed
        f.write("const char* vectorSeed[BIP39_VECTOR_COUNT] = {\n")
        for vector in vectors["english"]:
            f.write('    "%s",\n' % vector[2])
        f.write("};\n\n")

        # Xprv
        f.write("const char* vectorXprv[BIP39_VECTOR_COUNT] = {\n")
        for vector in vectors["english"]:
            f.write('    "%s",\n' % vector[3])
        f.write("};\n")

        print("Saving file to %s" % destination_file)


if __name__ == "__main__":
    main()
